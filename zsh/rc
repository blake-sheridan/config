# -*- mode: shell-script -*-

alias a='git add --patch'
alias ap='ack --python'
alias c='git checkout --patch'
alias cb='cd $OLDPWD'
alias d='git diff'
alias e='emacs -nw'
alias f='find -name'
alias g='git'
alias gb='git branch'
alias gbl='git branch --list'
alias gblr='git branch --list --remote'
alias gc='git commit'
alias gca='git commit --amend'
alias gcm='git checkout master'
# Delete all merged branches
alias gdmb='git branch --merged | egrep -v "(^\*|master)" | xargs git branch -d'
alias gf='git fetch'
alias gp='git pull'
alias gpr='git pull --rebase'
alias gr='git rebase'
alias grc='git rebase --continue'
alias grh='git reset HEAD --'
alias gri='git rebase --interactive'
alias gst='git status --untracked-files=no'
alias gsu='git submodule update'
alias gsui='git submodule update --init'
alias gsuir='git submodule update --init --recursive'
alias l='ls'
alias ls='LC_COLLATE=C ls --color=auto --group-directories-first --hide="LICENSE*" --hide="__pycache__" -p'
alias lsa='ls -A'
alias lsla='ls -la'
# Kill any suspended processes
alias ks='kill -s KILL ${${(v)jobstates##*:*:}%=*}'
alias p='python3'
alias pe='pipenv'
alias pei='pipenv install'
alias peid='pipenv install --dev'
alias pes='pipenv shell'
alias s='git status'
# Change to the current Python environment's site-packages/ directory
alias sp='cd $(python3 -c '\''for x in filter(lambda x: x.endswith("site-packages"), __import__("sys").path): print(x)'\'')'
alias sudo='sudo '
alias t='tail -f'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

# My repos
config=~/config
scripts=~/scripts

# If we're in a WSL instanceâ€¦
if [[ -d /mnt/c ]]; then
    blake=/mnt/c/Users/blake
fi

ls_colors=(
    bd='1;38;5;244;48;5;230'    # block device
    ca='30;41'                  # capability
    cd='1;38;5;244;48;5;230'    # character device
    di='38;5;2'                 # directory
    ex='38;5;1'                 # executable files
    ln='3;33'                   # symbolic link
    mh='0'                      # multihardlink
    no='5'                      # normal text
    or='9;38;5;160;48;5;235'    # orphaned link
    ow='38;5;33;48;5;235'       # world writable directories without sticky bit set
    pi='1;38;5;136;48;5;230'    # fifo
    rs='0'                      # reset
    sg='38;5;230;48;5;136'      # setgid
    so='1;38;5;136;48;5;230'    # socket
    st='38;5;230;48;5;33'       # directories with sticky bit set but not world writable
    su='38;5;230;48;5;160'      # setuid
    tw='38;5;230;48;5;64'       # world writable directories with sticky bit set

    '*@test'='38;5;84'

    '*.gitignore'='38;5;94'

    '*.c'='38;5;34'
    '*.h'='38;5;108'

    '*.cxx'='38;5;222'
    '*.hxx'='38;5;220'

    '*.el'='38;5;203'

    '*.ini'='38;5;74'

    '*.la'='38;5;88'

    '*.log'='38;5;130'

    '*.ac'='38;5;24'
    '*.am'='38;5;24'
    '*.in'='38;5;24'
    '*.m4'='38;5;24'

    '*.md'='38;5;214'

    '*Makefile'='38;5;22'
    '*.mk'='38;5;176'

    '*.png'='38;5;68'

    '*.py'='38;5;226'

    '*.sh'='38;5;180'
    '*.zsh'='38;5;180'

    '*.sql'='38;5;81'

    '*.txt'='38;5;253'

    '*COPYING'='38;5;238'
    '*LICENSE'='38;5;238'
    '*LICENSE.txt'='38;5;238'

    '*README'='38;5;238'
    '*README.md'='38;5;238'
    '*README.txt'='38;5;238'
)

export ACKRC=$config/ack/rc
export LS_COLORS=${(j/:/)ls_colors}
export PATH=$scripts:$PATH

HISTFILE=~/.zsh_history
HISTSIZE=99999
if ((${#SSH_TTY[@]})); then
    PS1="%F{4}%m:%~%f "
else
    PS1="%F{4}%~%f "
fi
RPS1="%F{23}%*"
SAVEHIST=$HISTSIZE
TERM=xterm-256color

# Automatic `ls` after changing the working directory
chpwd() { ls }

zstyle :compinstall filename '/home/blake/.zshrc'
zstyle ':completion:*:default' list-colors $ls_colors

autoload -Uz compinit
compinit

# I don't remember
bindkey -e

# Any machine-specific stuff not under version control
if [[ -f ~/.local_variables ]]; then
    source ~/.local_variables
fi
